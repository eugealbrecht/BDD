<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>